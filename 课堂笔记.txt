Jupyter notebook
magic命令
!git...
%pwd
%cd ..两点表示上一级目录


课件 3 
3.2
（1）ans的小数的位数最后为什么那么多？因为float浮点数的0.1不等于0.1！浮点数不精确，是近似值。因为计算机内部二进制表示的问题。
（2）应改为root interval=[ {0:.9f}, {1:.9f}], ans= {2:.9f}
3.4
range(5)，表示[0,1,2,3,4]
range(1,5)，表示[1,2,3,4]
scipy.optimize.bisect(f, a, b, args=(), xtol=2e-12, rtol=8.8817841970012523e-16, maxiter=100, full_output=False, disp=True)
args=()containing extra arguments for the function f. f is called by apply(f, (x)+args)
(k,)什么意思？

课件 4
函数变量里，关键词从右往左写。
# remove all non-letters.
        letters = ''
        for c in s:          
            if c in 'abcdefghijklmnopqrstuvwxyz':
                letters = letters + c
        return letters

python的文本串（''' '''）docstring不止是不影响程序运行的注释，还作为一个字符串被储存，可以调用出来

全局变量外部首先要有定义，然后函数内部用的时候要加global

nameHandle = open('kids.txt', 'w') 打开文件，准备写入
nameHandle = open('kids.txt', 'r') 打开文件，准备读入 读出所有行
for line in nameHandle:
    print(line)             write里有/n 每个line也包含了名字和一个空行，所以会输出空行
nameHandle.close()       

作业三：
数据结构+算法=程序设计
首先描述对象（设备），既有数据，又有行为，所以用类表示这一个整体。
描述关联件（Node）和关联性，系统特性即定义完成。
形成**系统方程**（通过算法实现）
求解系统方程
trap疏水器
定义类  文字交代为什么设 元素有哪些 
class Node():    括号里可以不要self
__init__(self): 内置的构造，类里的每个方法一定要有self
数据属性：self.* 随时可以添加
模块简单比较好，完成功能尽可能单一。最后再组合。
初始化参数（描述热力参数）和热力计算分离。
循环的过程用类更好。
程序形成系统方程？？
tkinter 用户接口  pyQT学习QT的框架 嵌入式图形界面  GUI   VCL
设计程序需要抽象和分解
把事物定义为类 = 属性+方法 不断改进
for inode in self.nodes
    print node
__str__
每个类可以定义一个输出

.csv文件

增量开发 迭代改进 不要想好了再开始。

课件5
tuple 元组 有序的元素序列 t = (1,) 同一元组内元素可以是不同类型
list的可变性，作为循环判断条件删除元素 要用克隆
赋值不行，对应的还是同一个变量
s.split()
dict的key一定是不可变类型，无序，for e in Dict：时，只遍历key。单向的由key指向value

会考字典和列表 在语言环境里
程序封装。特性码
Introductory to lib

课件15
纯文本文件读取  csv逗号分隔纯文本
读取的都是文本，运算时候要转换
plt.legend(loc = 'best')显示标签 best为显示的位置


课件16
相关≠因果

作业四：
数据源（数据层） 分析（逻辑层） 显示（用户层）
数据源先给分析对象  分析与分析对象有关 分析结果再给分析对象之后，再给显示
相对独立 各种数据源不同取数据方法、不同显示方式（不同接口）
纯文本文件四组数据不要放在一个文件里

课件8
类 异常处理 try: except: raise抛出异常
__intit__
内置串方法__str__
__lt__比较大小（＜）相当于重载运算符，用sort对类对象操作的时候，一定类里一定要重载

class MITPerson(Person):

    nextIdNum = 0                 # identification number  类共享的变量　每个成员都可以取

    def __init__(self, name):
        
        Person.__init__(self, name)
        
        self.idNum = MITPerson.nextIdNum   #self.idNum是实例本身的变量
        
        MITPerson.nextIdNum += 1 # 

重载<之后，lt跟着运算符前面的类型走
p4 < p1  p4.__lt__(p1)

generator object  生成器 不产生列表， 一个个取元素，

课件7
异常处理
